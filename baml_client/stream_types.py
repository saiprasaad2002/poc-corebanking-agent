# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from pydantic import BaseModel, ConfigDict

import baml_py

from . import types

StreamStateValueT = typing.TypeVar('StreamStateValueT')
class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]
# #########################################################################
# Generated classes (7)
# #########################################################################

class ClarityCheck(BaseModel):
    clarity: typing.Optional[bool] = None
    functioncall: typing.Optional[typing.List["Invocations"]] = None
    reasoning: typing.Optional[str] = None

class ComponentDetail(BaseModel):
    source: typing.Optional[str] = None
    crieteria: typing.Optional[str] = None
    risk: typing.Optional[str] = None

class Intent(BaseModel):
    valid: typing.Optional[bool] = None

class Invocations(BaseModel):
    tool_name: typing.Optional[str] = None
    parameters: typing.Optional[typing.Union[typing.List[str], typing.List[int]]] = None

class Parameters(BaseModel):
    components: typing.Dict[str, typing.List["ComponentDetail"]]
    formula: typing.Optional[str] = None
    planner: typing.Optional[str] = None
    sql_template: typing.Optional[str] = None

class Resume(BaseModel):
    name: typing.Optional[str] = None
    email: typing.Optional[str] = None
    experience: typing.List[str]
    skills: typing.List[str]

class Toolvalidation(BaseModel):
    valid: typing.Optional[bool] = None
    tool_name: typing.Optional[typing.List[str]] = None
    description: typing.Optional[typing.List[str]] = None
    reasoning: typing.Optional[str] = None

# #########################################################################
# Generated type aliases (0)
# #########################################################################
